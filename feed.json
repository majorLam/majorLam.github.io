{
    "version": "https://jsonfeed.org/version/1",
    "title": "胡为me来哉",
    "description": "",
    "home_page_url": "http://example.com",
    "items": [
        {
            "id": "http://example.com/2023/08/17/python%E8%84%9A%E6%9C%AC%E6%B1%87%E6%80%BB/",
            "url": "http://example.com/2023/08/17/python%E8%84%9A%E6%9C%AC%E6%B1%87%E6%80%BB/",
            "title": "python脚本汇总",
            "date_published": "2023-08-17T03:06:10.000Z",
            "content_html": "<center>言简意赅，此贴手写收集整理通用脚本方便日常，仅供参考。</center>\n<h1 id=\"1查看电脑配置\"><a class=\"markdownIt-Anchor\" href=\"#1查看电脑配置\">#</a> 1. 查看电脑配置</h1>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> wmi</span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">System_spec</span>():</span><br><span class=\"line\">    Pc = wmi.WMI()</span><br><span class=\"line\">    os_info = Pc.Win32_OperatingSystem()[<span class=\"number\">0</span>]</span><br><span class=\"line\">    processor = Pc.Win32_Processor()[<span class=\"number\">0</span>]</span><br><span class=\"line\">    Gpu = Pc.Win32_VideoController()[<span class=\"number\">0</span>]</span><br><span class=\"line\">    os_name = os_info.Name.encode(<span class=\"string\">&#x27;utf-8&#x27;</span>).split(<span class=\"string\">b&#x27;|&#x27;</span>)[<span class=\"number\">0</span>]</span><br><span class=\"line\">    ram = <span class=\"built_in\">float</span>(os_info.TotalVisibleMemorySize) / <span class=\"number\">1048576</span></span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">f&#x27;操作系统: <span class=\"subst\">&#123;os_name&#125;</span>&#x27;</span>)</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">f&#x27;CPU: <span class=\"subst\">&#123;processor.Name&#125;</span>&#x27;</span>)</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">f&#x27;内存: <span class=\"subst\">&#123;ram&#125;</span> GB&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">f&#x27;显卡: <span class=\"subst\">&#123;Gpu.Name&#125;</span>&#x27;</span>)</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&quot;\\n计算机信息如上 ↑ ↑ ↑ ↑ ↑ ↑ ↑ ↑ ↑ ↑ ↑ ↑&quot;</span>)</span><br><span class=\"line\">System_spec()</span><br><span class=\"line\"><span class=\"built_in\">input</span>(<span class=\"string\">&quot;按enter退出！&quot;</span>)</span><br></pre></td></tr></table></figure>\n<p>❗❗❗未完待续。。。</p>\n",
            "tags": [
                "python"
            ]
        },
        {
            "id": "http://example.com/2023/08/12/%E6%95%B0%E6%8D%AE%E5%BA%93%E5%88%86%E6%9E%90%E4%B8%8E%E6%B6%89%E5%8F%8A-%E9%80%89%E6%8B%A9/",
            "url": "http://example.com/2023/08/12/%E6%95%B0%E6%8D%AE%E5%BA%93%E5%88%86%E6%9E%90%E4%B8%8E%E6%B6%89%E5%8F%8A-%E9%80%89%E6%8B%A9/",
            "title": "数据库分析与涉及 选择",
            "date_published": "2023-08-12T09:24:37.000Z",
            "content_html": "<h1 id=\"数据库分析与涉及\"><a class=\"markdownIt-Anchor\" href=\"#数据库分析与涉及\">#</a> 数据库分析与涉及</h1>\n<ol>\n<li>\n<p><strong>事务规范</strong>包括了</p>\n<blockquote>\n<p>事务<font color =orange>名称</font>、事务<font color =orange>描述</font>、事务所访问的<font color =orange>数据项</font>、事务<font color =orange>用户</font>。</p>\n</blockquote>\n</li>\n<li>\n<p><strong>事务规范</strong>可以用来表示<strong>数据库应用系统</strong>的<font color =orange>数据处理需求</font>。</p>\n</li>\n<li>\n<p>** 数据库应用系统的<font color =red>实施工作</font>** 包括:</p>\n<blockquote>\n<p><font color =orange>创建</font>数据库、<font color =orange>装载数据</font>、<font color =orange>编写与调试应用程序</font>、数据库<font color =orange>试运行</font></p>\n</blockquote>\n</li>\n<li>\n<p>数据库应用系统 (DBAS)<font color=red>实现与部署</font>内容包括:</p>\n<blockquote>\n<p>①建立数据库结构；②数据加载；③事务和应用程序的编码及测试；④系统集成、测试与试运行；⑤系统部署。</p>\n</blockquote>\n</li>\n<li>\n<p>从<font color=red>功能角度</font>   <font color=red>数据库应用系统</font>可以划分为四个层次来实现：</p>\n<blockquote>\n<p>①<font color =orange>表示层</font>：用于显示数据和接收用户输入的数据。（一般为 Windows 应用程序或 Web 应用程序)。<br>\n②<font color =orange>业务逻辑</font>层：是表示层和数据访问层之间的桥梁，主要负责数据的传递和处理。<br>\n③<font color =orange>数据访问</font>层：负责与 DBMS 系统进行交互，提取或存入应用系统所需的数据。<br>\n④<font color =orange>数据持久层</font>：负责保存和管理应用系统数据。（根据事务–基本表交叉引用矩阵来调整数据文件的组织结构）。</p>\n</blockquote>\n</li>\n<li>\n<p>索引使用的原则：</p>\n<blockquote>\n<p>1、经常<font color=orange>在查询中作为条件被使用的列</font>；<br>\n2、频繁进行<font color=orange>排序 group by</font>或<font color=orange>分组 order by</font>操作的列；<br>\n3、一个列的值域很大；@如果待排序的列有多个，应在这些列上建立复合索引。</p>\n</blockquote>\n</li>\n<li>\n<p>对于<font color =red>关系模式</font>进行<font color =red>去规范化处理</font>，这属于数据库结构涉及中的<font color=orange>物理结构设计</font>。</p>\n<p><code>解析：通过数据库概念设计和逻辑设计已经得到了规范化的关系模式。尽管关系数据库模式是按照关系数据库管理系统支持的结构进行数据的描述和组织的，然而，这些符号表示并不能解释如何处理和存储数据。数据库物理设计的目的是将数据的逻辑描述转换为实现技术规范，其目标是设计数据存储方案，以便提供足够好的性能并确保数据库数据的完整性、安全性和可恢复性。</code></p>\n</li>\n<li>\n<p><font color=red>事务概要设计</font>内容包括：</p>\n<blockquote>\n<p>事务<font color=orange>名称</font>、事务所访问的<font color=orange>关系表及关系属性</font>、事务<font color=orange>处理逻辑</font>、事务<font color=orange>用户</font>（指使用、启动、调用该事务的软件模块或系统）。</p>\n</blockquote>\n</li>\n<li>\n<p><font color=red>降低事务隔离级别</font>可以:</p>\n<blockquote>\n<p>提高<font color=orange>事务的吞吐量</font>，</p>\n<p>提高<font color=orange>活锁的可能性</font>，</p>\n<p>降低发生<font color=orange>死锁</font>、发生<font color=orange>阻塞</font>的可能性。</p>\n</blockquote>\n</li>\n<li>\n<p><font color=red>分区表</font>涉及到数据库的<font color=orange>物理结构</font>。</p>\n<p><code>解析：为改善对这类大数据量基本表的访问性能，可将基本表划分为若干分区，各分区数据分别存储在不同位置的磁盘上，并可采用不同的物理组织方式。分区表是从物理上将一个大表分成几个小表，但从逻辑上来看还是一个大表。 </code></p>\n</li>\n<li>\n<p><font color =red>合并表</font>属于数据库的<font color=orange>物理结构调整</font>。</p>\n</li>\n<li>\n<p><strong>完整性约束</strong>按照其<strong>约束条件</strong>的作用对象可以划分为不同级别。</p>\n<p>已知关系表：职工 (职工号，职工名，经理职工号，工资)，如果要求<font color=red>职工的工资不能高于其经理的工资</font>，则这个约束的完整性级别属于<font color=orange>关系级完整性约束</font>。</p>\n<p><code>完整性约束条件的作用对象分为列、元组和关系三种级别，其中对列的约束主要指对其值类型、范围、精度、排序等的约束条件。对元组的约束主要指对记录中各个属性之间的联系的约束条件。对关系的约束是指对若干纪录间、关系集合上以及关系之间联系的约束条件。</code></p>\n</li>\n<li>\n<p>已知关系 R (A, B, C)，其<font color =blue>主码是属性 A</font>。下列 SQL 语句中定义了一个唯一辅索引的是  create unique index idx2 on R (A)。</p>\n<blockquote>\n<p>解析：在数据文件的<font color=orange>非主属性上建立的索引称为辅索引</font>。</p>\n</blockquote>\n</li>\n<li>\n<p>IDEFO 图：<strong>上控下机左入右出</strong>。（控制，机制，输入，输出）</p>\n<p>左边的输入箭头表示完成活动需要的数据；</p>\n<p>矩形框上方的控制箭头描述了影响这个活动执行的事件或约束条件；</p>\n<p>右边的输出箭头说明由活动产生的结果及信息；</p>\n<p>下方进入的机制箭头表示实施该活动的物理手段或完成活动需要的资源。</p>\n</li>\n<li>\n<p>在进行 DBAS 设计时，为了<font color=red>避免死锁</font>，可以考虑以下原则：<br>\n（1）按<font color=orange>同一顺序</font>访问资源。<br>\n（2）<font color=orange>避免</font>事务中的<font color=orange>用户交互</font>。<br>\n（3）采用<font color=orange>小事务模式</font>，尽量缩短事务的长度，减少占有锁的时间。<br>\n（4）尽量使用<font color=orange>记录级别</font>的锁（<font color=orange>行</font>锁），少用表级别的锁。<br>\n（5）使用<font color=orange>绑定连接</font>，使同一应用程序所打开的两个或多个连接可以相互合作。</p>\n</li>\n<li>\n<p>数据库应用系统的 **<font color=red>业务逻辑层</font>主要负责<font color =red>构件</font>的设计 **。</p>\n<blockquote>\n<p>1、一个构件或模块只负责完成一项任务，也就是<font color=orange>单一责任</font>原则。<br>\n2、各个构件均应具有独立的功能，并最大限度地减少与其他构件功能重叠。<br>\n3、构件之间的接口应尽量简单明确。<br>\n4、如果两个构件间的关系比较复杂，应考虑进一步进行模块划分。<br>\n5、如果构件过于复杂，可以考虑将其细分。</p>\n</blockquote>\n</li>\n<li>\n<p>提高数据的隔离性级别可以降低发生活锁的可能性。</p>\n<p><code>事务的隔离性是指多个并发事务同时访问一个数据库时，一个事物不应被另一个事物所干扰，即保证并发读取数据的正确性，降低发生数据不一致的可能性。</code></p>\n</li>\n</ol>\n<p>❗❗❗未完待续。。。</p>\n",
            "tags": [
                "NCRE 数据库"
            ]
        },
        {
            "id": "http://example.com/2023/08/09/hello-world/",
            "url": "http://example.com/2023/08/09/hello-world/",
            "title": "Hello World",
            "date_published": "2023-08-09T07:57:59.639Z",
            "content_html": "<p>Welcome to <a href=\"https://hexo.io/\">Hexo</a>! This is your very first post. Check <a href=\"https://hexo.io/docs/\">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href=\"https://hexo.io/docs/troubleshooting.html\">troubleshooting</a> or you can ask me on <a href=\"https://github.com/hexojs/hexo/issues\">GitHub</a>.</p>\n<h2 id=\"quick-start\"><a class=\"markdownIt-Anchor\" href=\"#quick-start\">#</a> Quick Start</h2>\n<p><img src=\"hello-world.assets/image-20230809205155630.png\" alt=\"image-20230809205155630\"></p>\n<h3 id=\"create-a-new-post\"><a class=\"markdownIt-Anchor\" href=\"#create-a-new-post\">#</a> Create a new post</h3>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo new <span class=\"string\">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/writing.html\">Writing</a></p>\n<h3 id=\"run-server\"><a class=\"markdownIt-Anchor\" href=\"#run-server\">#</a> Run server</h3>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo server</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/server.html\">Server</a></p>\n<h3 id=\"generate-static-files\"><a class=\"markdownIt-Anchor\" href=\"#generate-static-files\">#</a> Generate static files</h3>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo generate</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/generating.html\">Generating</a></p>\n<h3 id=\"deploy-to-remote-sites\"><a class=\"markdownIt-Anchor\" href=\"#deploy-to-remote-sites\">#</a> Deploy to remote sites</h3>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo deploy</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/one-command-deployment.html\">Deployment</a></p>\n",
            "tags": []
        },
        {
            "id": "http://example.com/2023/08/08/%E8%BF%99%E4%B8%80%E7%AF%87%E6%B5%8B%E8%AF%95%E6%96%87%E7%AB%A0/",
            "url": "http://example.com/2023/08/08/%E8%BF%99%E4%B8%80%E7%AF%87%E6%B5%8B%E8%AF%95%E6%96%87%E7%AB%A0/",
            "title": "这一篇测试文章",
            "date_published": "2023-08-08T03:04:13.000Z",
            "content_html": "<blockquote>\n<p>555</p>\n</blockquote>\n<h1 id=\"select-eemployee_id-edepartment_id\"><a class=\"markdownIt-Anchor\" href=\"#select-eemployee_id-edepartment_id\">#</a> SELECT E.EMPLOYEE_ID, E.DEPARTMENT_ID</h1>\n<p><font color=orange>FROM  EMPLOYEES E, DEPARTMENTS D</font><br>\nWHERE E.“DEPARTMENT_ID”=D.“DEPARTMENT_ID”;</p>\n<hr>\n<p>desc EMPLOYEES；<br>\nSELECT * FROM EMPLOYEES;<br>\nSELECT * FROM DEPARTMENTS;<br>\nSELECT *FROM EMPLOYEES;</p>\n<p>– SQL92 右外连接 ------------------------------------<br>\nSELECT EMPLOYEE_ID, DEPARTMENT_NAME<br>\nFROM  EMPLOYEES E, DEPARTMENTS D<br>\nWHERE E.“DEPARTMENT_ID”(+)=D.“DEPARTMENT_ID”;</p>\n<p>– --SQL99 左外连接 ------------------------------------<br>\nSELECT EMPLOYEE_ID,DEPARTMENT_NAME<br>\nfrom EMPLOYEES e  left outer  join DEPARTMENTS d<br>\non e.DEPARTMENT_ID=d.DEPARTMENT_ID;</p>\n<h1 id=\"plsql\"><a class=\"markdownIt-Anchor\" href=\"#plsql\">#</a> PL/SQL</h1>\n<p>procedural language SQL\t过程化 SQL</p>\n<h1 id=\"函数\"><a class=\"markdownIt-Anchor\" href=\"#函数\">#</a> 函数</h1>\n<h2 id=\"decode函数\"><a class=\"markdownIt-Anchor\" href=\"#decode函数\">#</a> decode 函数</h2>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">decode (条件，</span><br><span class=\"line\">        值<span class=\"number\">1</span>，返回值<span class=\"number\">1</span>，</span><br><span class=\"line\">        值<span class=\"number\">2</span>，返回值<span class=\"number\">2</span>，</span><br><span class=\"line\">       ......</span><br><span class=\"line\">       值n,返回值n，</span><br><span class=\"line\">       缺省值);</span><br><span class=\"line\"></span><br><span class=\"line\">该函数的含义如下：</span><br><span class=\"line\">IF 条件<span class=\"operator\">=</span>值<span class=\"number\">1</span> <span class=\"keyword\">THEN</span></span><br><span class=\"line\">　　　　<span class=\"keyword\">RETURN</span>(翻译值<span class=\"number\">1</span>)</span><br><span class=\"line\">ELSIF 条件<span class=\"operator\">=</span>值<span class=\"number\">2</span> <span class=\"keyword\">THEN</span></span><br><span class=\"line\">　　　　<span class=\"keyword\">RETURN</span>(翻译值<span class=\"number\">2</span>)</span><br><span class=\"line\">　　　　......</span><br><span class=\"line\">ELSIF 条件<span class=\"operator\">=</span>值n <span class=\"keyword\">THEN</span></span><br><span class=\"line\">　　　　<span class=\"keyword\">RETURN</span>(翻译值n)</span><br><span class=\"line\"><span class=\"keyword\">ELSE</span></span><br><span class=\"line\">　　　　<span class=\"keyword\">RETURN</span>(缺省值)</span><br><span class=\"line\"><span class=\"keyword\">END</span> IF</span><br></pre></td></tr></table></figure>\n<p>decode (条件，值 1, 返回值 1, 值 2, 返回值 2,… 值 n, 返回值 n, 缺省值)</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">select</span> decode(<span class=\"number\">100</span>,<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>)</span><br><span class=\"line\"><span class=\"comment\">--100不等于1，2，3，结果返回3</span></span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>decode (字段或字段的运算，值 1，值 2，值 3）<br>\n这个函数运行的结果是，当字段或字段的运算的值等于值 1 时，该函数返回值 2，否则返回值 3<br>\n 当然值 1，值 2，值 3 也可以是表达式，这个函数使得某些 sql 语句简单了许多</p>\n</blockquote>\n<p>使用方法：<br>\n1、<strong>比较大小</strong></p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">select</span> decode(sign(变量<span class=\"number\">1</span><span class=\"operator\">-</span>变量<span class=\"number\">2</span>),<span class=\"number\">-1</span>,变量<span class=\"number\">1</span>,变量<span class=\"number\">2</span>) <span class=\"keyword\">from</span> dual;<span class=\"comment\">--取最小值</span></span><br><span class=\"line\"><span class=\"keyword\">select</span> decode (sign(<span class=\"number\">10</span><span class=\"number\">-20</span>),<span class=\"number\">-1</span>,<span class=\"number\">10</span>,<span class=\"number\">20</span>) <span class=\"keyword\">from</span> dual;</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>sign () 函数根据某个值是 0、正数还是负数，分别返回 0、1、-1<br>\n 例如：<br>\n变量 1=10，变量 2=20<br>\n 则 sign (变量 1 - 变量 2) 返回 - 1，decode 解码结果为 “变量 1”，达到了取较小值的目的。</p>\n</blockquote>\n<p>2、此函数用在 SQL 语句中，功能介绍如下：<br>\nDecode 函数与一系列嵌套的 IF-THEN-ELSE 语句相似。base_exp 与 compare1,compare2 等等依次进行比较。如果 base_exp 和 第 i 个 compare 项匹配，就返回第 i 个对应的 value 。如果 base_exp 与任何的 compare 值都不匹配，则返回 default。每个 compare 值顺次求值，如果发现一个匹配，则剩下的 compare 值（如果还有的话）就都不再求值。一个为 NULL 的 base_exp 被认为和 NULL compare 值等价。如果需要的话，每一个 compare 值都被转换成和第一个 compare 值相同的数据类型，这个数据类型也是返回值的类型。</p>\n<p>Decode 函数在实际开发中非常的有用</p>\n<p>结合 Lpad 函数，如何使主键的值自动加 1 并在前面补 0<br>\nselect LPAD (decode (count (记录编号),0,1,max (to_number (记录编号)+1)),14,‘0’) 记录编号 from tetdmis</p>\n<p>eg:<br>\nselect decode(dir,1,0,1) from a1_interval<br>\ndir 的值是 1 变为 0，是 0 则变为 1</p>\n<p>比如我要查询某班男生和女生的数量分别是多少？<br>\n 通常我们这么写:<br>\nselect count(<em>) from 表 where 性别 ＝ 男；<br>\nselect count(</em>) from 表 where 性别 ＝ 女；<br>\n要想显示到一起还要 union 一下，太麻烦了<br>\n用 decode 呢，只需要一句话<br>\n select decode (性别，男，1，0），decode (性别，女，1，0） from 表</p>\n<p>3，order by 对字符列进行特定的排序<br>\n大家还可以在 Order by 中使用 Decode。<br>\n例：表 table_subject，有 subject_name 列。要求按照：语、数、外的顺序进行排序。这时，就可以非常轻松的使用 Decode 完成要求了。<br>\nselect * from table_subject order by decode (subject_name, ‘语文’, 1, ‘数学’, 2, , ‘外语’,3)</p>\n<h1 id=\"ramn\"><a class=\"markdownIt-Anchor\" href=\"#ramn\">#</a> ramn</h1>\n<p>cmd 进入 &quot;rman target/&quot;</p>\n<p>归档模式</p>\n<p>archive log list;</p>\n<p>热备份：数据库依旧在运行</p>\n<h1 id=\"指令\"><a class=\"markdownIt-Anchor\" href=\"#指令\">#</a> 指令</h1>\n<p>1. 创建相同的表与数据（复制表）</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">create</span> <span class=\"keyword\">table</span> <span class=\"number\">1</span> <span class=\"keyword\">as</span> <span class=\"keyword\">select</span> <span class=\"operator\">*</span><span class=\"keyword\">from</span> <span class=\"number\">2</span>;</span><br></pre></td></tr></table></figure>\n<h1 id=\"案例\"><a class=\"markdownIt-Anchor\" href=\"#案例\">#</a> 案例</h1>\n<h2 id=\"1模拟数据库非正常宕机实例故障\"><a class=\"markdownIt-Anchor\" href=\"#1模拟数据库非正常宕机实例故障\">#</a> 1. 模拟数据库非正常宕机，实例故障</h2>\n<p>1 执行<font color=orange>shutdown abort</font>指令前</p>\n<p>2  查看 alert_$SID.log</p>\n<p>会找到 crash recovery  字样，如下所示</p>\n<p>Beginning crash recovery of 1 threads</p>\n<p>parallel recovery started with 3 processes</p>\n<p>Started redo scan</p>\n<p>Completed redo scan</p>\n<p>read 140 KB redo, 53 data blocks need recovery</p>\n<p>Started redo application at</p>\n<p>Thread 1: logseq 15, block 5469</p>\n<p>Recovery of Online Redo Log: Thread 1 Group 3 Seq 15 Reading mem 0</p>\n<p>Mem# 0: D:\\APP\\ORADATA\\ORCL9\\REDO03.LOG</p>\n<p>Completed redo application of 0.09MB</p>\n<p>Completed crash recovery at</p>\n<p>在数据库当前版本，abort 选项来停止实例， 实例的 smon 后台进程会自己进行修复。</p>\n<h2 id=\"2归档模式archive与非归档模式noarchive的转换\"><a class=\"markdownIt-Anchor\" href=\"#2归档模式archive与非归档模式noarchive的转换\">#</a> 2. 归档模式（archive）与非归档模式（noarchive）的转换</h2>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">shutdown immediate</span><br><span class=\"line\">startup mount</span><br><span class=\"line\"><span class=\"keyword\">alter</span> database archivelog;</span><br><span class=\"line\">archive log <span class=\"keyword\">start</span>;</span><br><span class=\"line\"><span class=\"keyword\">alter</span> database <span class=\"keyword\">open</span>;</span><br><span class=\"line\">archive log list;</span><br></pre></td></tr></table></figure>\n<h2 id=\"3归档模式下在线联机备份表空间-数据丢失后恢复表空间\"><a class=\"markdownIt-Anchor\" href=\"#3归档模式下在线联机备份表空间-数据丢失后恢复表空间\">#</a> 3. 归档模式下，在线联机备份表空间， 数据丢失后恢复表空间</h2>\n<p>①首先保证为存档模式</p>\n<p><img src=\"%E8%BF%99%E4%B8%80%E7%AF%87%E6%B5%8B%E8%AF%95%E6%96%87%E7%AB%A0.assets/image-20230223220638349.png\" alt=\"image-20230223220638349\"></p>\n<p>②</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">sql</span><span class=\"operator\">&gt;</span><span class=\"keyword\">alter</span> <span class=\"keyword\">table</span>space users <span class=\"keyword\">begin</span> backup;</span><br></pre></td></tr></table></figure>\n<p>③将【user1.dbf】文件备份到其他的盘；</p>\n<p>④</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">sql</span><span class=\"operator\">&gt;</span><span class=\"keyword\">alter</span> <span class=\"keyword\">table</span>space users <span class=\"keyword\">end</span> backup;</span><br></pre></td></tr></table></figure>\n<p>⑤执行一些 DML 操作 使用表空间 users</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">create</span> <span class=\"keyword\">table</span> me(id number);</span><br><span class=\"line\"><span class=\"keyword\">insert</span> <span class=\"keyword\">into</span> me <span class=\"keyword\">values</span>(<span class=\"number\">2023</span>);</span><br></pre></td></tr></table></figure>\n<p>⑥ 删除 users.dbf  模拟数据丢失，介质故障</p>\n<blockquote>\n<p>如果提示文件被占用， 则执行 shutdown  immediate  命令</p>\n<p>Linux 环境下可以直接 rm 命令删除</p>\n</blockquote>\n<p>⑦尝试启动数据库， 会遇到错误提示</p>\n<p><img src=\"%E8%BF%99%E4%B8%80%E7%AF%87%E6%B5%8B%E8%AF%95%E6%96%87%E7%AB%A0.assets/image-20230223222045926.png\" alt=\"image-20230223222045926\"></p>\n<p>⑧执行 还原操作：  将步骤 2 备份文件手工拷贝回源目录；</p>\n<p>* 因为表空间和数据文件存在 1-n 对应关系，数据文件序号可以从数据字典 v$datafile 查询 file#</p>\n<p>⑨执行 恢复操作：</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">SQL</span> <span class=\"operator\">&gt;</span> recover  datafile  <span class=\"operator\">&lt;</span>file#<span class=\"operator\">&gt;</span>;</span><br><span class=\"line\"><span class=\"keyword\">SQL</span><span class=\"operator\">&gt;</span> <span class=\"keyword\">alter</span> database <span class=\"keyword\">open</span>;</span><br></pre></td></tr></table></figure>\n<h2 id=\"4-用rman-执行不完全恢复\"><a class=\"markdownIt-Anchor\" href=\"#4-用rman-执行不完全恢复\">#</a> 4. 用 RMAN 执行不完全恢复</h2>\n<p>1  理解不完全恢复：  就是恢复到指定的时间点， 可以是 SCN ，可以是 timestamp</p>\n<p>2  用 RMAN 执行一次全备份  backup database plus archivelog;</p>\n<p><img src=\"%E8%BF%99%E4%B8%80%E7%AF%87%E6%B5%8B%E8%AF%95%E6%96%87%E7%AB%A0.assets/wps1.jpg\" alt=\"img\"></p>\n<p>3  新建一个表 bkp 使用 users 表空间</p>\n<p>4  在表 bkp 中插入数据， 并且提交</p>\n<p>5  select curent_scn from v$database;  — 生产环境中很可能无法时时刻刻记录 scn</p>\n<p><img src=\"%E8%BF%99%E4%B8%80%E7%AF%87%E6%B5%8B%E8%AF%95%E6%96%87%E7%AB%A0.assets/wps2.jpg\" alt=\"img\"></p>\n<p>6  truncate 表 bkp</p>\n<p>7  建立一个新表 test 同样使用 users 表空间</p>\n<p>8  在表 test 中插入数据， 提交.</p>\n<p><img src=\"%E8%BF%99%E4%B8%80%E7%AF%87%E6%B5%8B%E8%AF%95%E6%96%87%E7%AB%A0.assets/wps3.jpg\" alt=\"img\"></p>\n<p>9  记录 archive log list 的 日志序号  — 理解 resetlogs 是什么意思</p>\n<p><img src=\"%E8%BF%99%E4%B8%80%E7%AF%87%E6%B5%8B%E8%AF%95%E6%96%87%E7%AB%A0.assets/wps4.jpg\" alt=\"img\"></p>\n<p>10  此时执行 RMAN 不完全恢复脚本  ，其中 SCN  — 步骤 5 获得</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">run&#123;</span><br><span class=\"line\">shutdown immediate</span><br><span class=\"line\">startup mount</span><br><span class=\"line\"><span class=\"keyword\">set</span> until scn <span class=\"number\">1456308</span>; </span><br><span class=\"line\">restore database;</span><br><span class=\"line\">recover database;</span><br><span class=\"line\"><span class=\"keyword\">sql</span> <span class=\"string\">&#x27;alter database open resetlogs&#x27;</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p><img src=\"%E8%BF%99%E4%B8%80%E7%AF%87%E6%B5%8B%E8%AF%95%E6%96%87%E7%AB%A0.assets/wps5.jpg\" alt=\"img\"></p>\n<p>11   查询表，bkp, test 看看哪些数据被恢复 – 理解不完全恢复的概念</p>\n<h1 id=\"具体问题的解决\"><a class=\"markdownIt-Anchor\" href=\"#具体问题的解决\">#</a> 具体问题的解决</h1>\n<h2 id=\"查看当前oracle-版本\"><a class=\"markdownIt-Anchor\" href=\"#查看当前oracle-版本\">#</a> 查看当前 oracle 版本:</h2>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">select</span> <span class=\"operator\">*</span><span class=\"keyword\">from</span> v$version;</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>mysql 为</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">select version();</span><br></pre></td></tr></table></figure>\n</blockquote>\n<h2 id=\"查看回收站\"><a class=\"markdownIt-Anchor\" href=\"#查看回收站\">#</a> 查看回收站:</h2>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">show</span> recyclebin;</span><br></pre></td></tr></table></figure>\n<h2 id=\"回收站当前状态\"><a class=\"markdownIt-Anchor\" href=\"#回收站当前状态\">#</a> 回收站当前状态:</h2>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">select</span> <span class=\"keyword\">value</span> <span class=\"keyword\">from</span> v$<span class=\"keyword\">parameter</span> <span class=\"keyword\">where</span> name <span class=\"operator\">=</span><span class=\"string\">&#x27;recyclebin&#x27;</span>;</span><br></pre></td></tr></table></figure>\n<h2 id=\"删除table不进入recycle的方法\"><a class=\"markdownIt-Anchor\" href=\"#删除table不进入recycle的方法\">#</a> 删除 Table 不进入 Recycle 的方法：</h2>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">drop</span> <span class=\"keyword\">table</span> tableName purge;</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>❗在 sys 用户下删除的表不进入回收站；</p>\n</blockquote>\n<p><img src=\"%E8%BF%99%E4%B8%80%E7%AF%87%E6%B5%8B%E8%AF%95%E6%96%87%E7%AB%A0.assets/image-20230223151804528.png\" alt=\"image-20230223151804528\"></p>\n<h1 id=\"serror\"><a class=\"markdownIt-Anchor\" href=\"#serror\">#</a> serror</h1>\n<h2 id=\"ora-01109数据库未打开未解决\"><a class=\"markdownIt-Anchor\" href=\"#ora-01109数据库未打开未解决\">#</a> ORA-01109：数据库未打开 (未解决)</h2>\n<p>直接执行这个语句 **<font color=orange size=6>alter database open</font>** 即可。</p>\n<p><img src=\"%E8%BF%99%E4%B8%80%E7%AF%87%E6%B5%8B%E8%AF%95%E6%96%87%E7%AB%A0.assets/image-20230222164423197.png\" alt=\"image-20230222164423197\"></p>\n<h2 id=\"ora-01918-用户-scott-不存在\"><a class=\"markdownIt-Anchor\" href=\"#ora-01918-用户-scott-不存在\">#</a> ORA-01918: 用户 ‘SCOTT’ 不存在</h2>\n<p>①找到安装路径下的 scott.sql 文件（路径根据自己安装的情况查找，默认为：</p>\n<p>【安装盘 /oracle\\WINDOWS.X64_193000_db_home\\rdbms\\admin\\scott.sql】）</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">A:\\SoftwareProgram\\oracle\\WINDOWS.X64_193000_db_home\\rdbms\\admin\\scott.sql</span><br></pre></td></tr></table></figure>\n<p>②运行</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">sql</span><span class=\"operator\">&gt;</span><span class=\"variable\">@A</span>:\\SoftwareProgram\\oracle\\WINDOWS.X64_193000_db_home\\rdbms\\admin\\scott.sql</span><br></pre></td></tr></table></figure>\n<p>③解锁 Scott 用户</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">alter</span> <span class=\"keyword\">user</span> scott account unlock;</span><br></pre></td></tr></table></figure>\n<p>④设置 Scott 用户密码为 tiger</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">alter</span> <span class=\"keyword\">user</span> scott identified <span class=\"keyword\">by</span> tiger;</span><br></pre></td></tr></table></figure>\n",
            "tags": [
                "文章内容标签"
            ]
        }
    ]
}